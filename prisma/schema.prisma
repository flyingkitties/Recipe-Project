generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Comment {
  id         String    @id @default(cuid())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  username   String?   @db.VarChar
  post       Post?     @relation(fields: [post_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  post_id    String?
  text       String?
  parent     Comment?  @relation("ParentChild", fields: [parentId], references: [id], onDelete: Cascade)
  parentId   String?
  children   Comment[] @relation("ParentChild")
}

model Like {
  id         String    @id @default(cuid())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  post_id    String
  username   String    @db.VarChar
  liked      Boolean   @default(false)
  post       Post?     @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique(fields: [post_id, username], name: "postAndUser")
}

model Favourite {
  id             String    @id @default(cuid())
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  post_id        String?
  username       String?   @db.VarChar
  favouriteSaved Boolean?  @default(false)
  post           Post?     @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique(fields: [post_id, username], name: "postAndUser")
}

model DishTypes {
  id         String    @id @default(cuid())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  name       String    @unique
  posts      Post[]
}

model Post {
  id          String      @id @default(cuid())
  external_id Int         @unique
  created_at  DateTime?   @default(now()) @db.Timestamptz(6)
  username    String      @db.VarChar
  title       String
  image       String
  ingredients Json[]      @db.JsonB
  method      String
  comments    Comment[]
  likes       Like[]
  types       DishTypes[]
  favourites  Favourite[]
}
